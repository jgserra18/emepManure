% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/User_input.R
\name{User_input}
\alias{User_input}
\title{User_input Class for Manure Management System}
\description{
An R6 class to validate user input for manure management simulations
with a focus on feeding and housing components. This class only handles input validation
and does not run any calculations.
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{animal_type}}{Character string representing the animal type (e.g., "dairy_cattle", "pigs")}

\item{\code{animal_number}}{Number of animals (head/yr)}

\item{\code{excretion_coefficient}}{Excretion coefficient (kg N/(head.yr)). If NULL, default values will be used.}

\item{\code{fraction_grazing}}{Fraction of time spent grazing \link{0-1}. Must sum to 1 with yards and housing.}

\item{\code{fraction_yards}}{Fraction of time spent in yards \link{0-1}. Must sum to 1 with grazing and housing.}

\item{\code{fraction_housing}}{Fraction of time spent in housing \link{0-1}. Must sum to 1 with grazing and yards.}

\item{\code{fraction_TAN}}{Fraction of total N excreted as TAN \link{0-1}, typically 0.5-0.7}

\item{\code{fraction_manure_slurry}}{Fraction of manure handled as slurry \link{0-1}. Must sum to 1 with solid.}

\item{\code{fraction_manure_solid}}{Fraction of manure handled as solid \link{0-1}. Must sum to 1 with slurry.}

\item{\code{bedding_amount}}{Bedding amount (kg/(head.yr)). Required when solid manure is used.}

\item{\code{bedding_N}}{N content in bedding (kg N/(head.yr)). Required when solid manure is used.}

\item{\code{fraction_storage_slurry}}{Fraction of slurry going to storage \link{0-1}. Must not exceed 1 with biogas.}

\item{\code{fraction_biogas_slurry}}{Fraction of slurry going to biogas \link{0-1}. Must not exceed 1 with storage.}

\item{\code{fraction_storage_solid}}{Fraction of solid manure going to storage \link{0-1}. Must not exceed 1 with biogas.}

\item{\code{fraction_biogas_solid}}{Fraction of solid manure going to biogas \link{0-1}. Must not exceed 1 with storage.}

\item{\code{slurry_crust}}{Boolean indicating whether slurry storage has a crust (TRUE) or not (FALSE).
This affects N2O emission factors for cattle and pigs.}

\item{\code{valid}}{Boolean indicating if all input parameters are valid}

\item{\code{validation_messages}}{List of validation error messages if any parameters are invalid}

\item{\code{config_paths}}{Paths to configuration files}

\item{\code{main_animal_type}}{The main animal type category from livestock_class_conversion.yaml}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-User_input-new}{\code{User_input$new()}}
\item \href{#method-User_input-validate}{\code{User_input$validate()}}
\item \href{#method-User_input-get_validation_message_string}{\code{User_input$get_validation_message_string()}}
\item \href{#method-User_input-print}{\code{User_input$print()}}
\item \href{#method-User_input-get_parameters}{\code{User_input$get_parameters()}}
\item \href{#method-User_input-get_main_animal_type}{\code{User_input$get_main_animal_type()}}
\item \href{#method-User_input-fill_default_values}{\code{User_input$fill_default_values()}}
\item \href{#method-User_input-load_bedding_amount}{\code{User_input$load_bedding_amount()}}
\item \href{#method-User_input-load_bedding_N}{\code{User_input$load_bedding_N()}}
\item \href{#method-User_input-load_defaults_for_animal}{\code{User_input$load_defaults_for_animal()}}
\item \href{#method-User_input-clone}{\code{User_input$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-new"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-new}{}}}
\subsection{Method \code{new()}}{
Create a new User_input object and validate the input parameters
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$new(
  animal_type,
  animal_number,
  excretion_coefficient = NULL,
  fraction_grazing = NULL,
  fraction_yards = NULL,
  fraction_housing = NULL,
  fraction_TAN = NULL,
  fraction_manure_slurry,
  fraction_manure_solid,
  bedding_amount = NULL,
  bedding_N = NULL,
  fraction_storage_slurry,
  fraction_biogas_slurry,
  fraction_storage_solid,
  fraction_biogas_solid,
  slurry_crust = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{animal_type}}{Character string representing the animal type (e.g., "dairy_cattle", "pigs")}

\item{\code{animal_number}}{Number of animals (head/yr)}

\item{\code{excretion_coefficient}}{Excretion coefficient (kg N/(head.yr)). If NULL, default values will be used.}

\item{\code{fraction_grazing}}{Fraction of time spent grazing \link{0-1}. Must sum to 1 with yards and housing.}

\item{\code{fraction_yards}}{Fraction of time spent in yards \link{0-1}. Must sum to 1 with grazing and housing.}

\item{\code{fraction_housing}}{Fraction of time spent in housing \link{0-1}. Must sum to 1 with grazing and yards.}

\item{\code{fraction_TAN}}{Fraction of total N excreted as TAN \link{0-1}, typically 0.5-0.7}

\item{\code{fraction_manure_slurry}}{Fraction of manure handled as slurry \link{0-1}. Must sum to 1 with solid.}

\item{\code{fraction_manure_solid}}{Fraction of manure handled as solid \link{0-1}. Must sum to 1 with slurry.}

\item{\code{bedding_amount}}{Bedding amount (kg/(head.yr)). Required when solid manure is used.}

\item{\code{bedding_N}}{N content in bedding (kg N/(head.yr)). Required when solid manure is used.}

\item{\code{fraction_storage_slurry}}{Fraction of slurry going to storage \link{0-1}. Must not exceed 1 with biogas.}

\item{\code{fraction_biogas_slurry}}{Fraction of slurry going to biogas \link{0-1}. Must not exceed 1 with storage.}

\item{\code{fraction_storage_solid}}{Fraction of solid manure going to storage \link{0-1}. Must not exceed 1 with biogas.}

\item{\code{fraction_biogas_solid}}{Fraction of solid manure going to biogas \link{0-1}. Must not exceed 1 with storage.}

\item{\code{slurry_crust}}{Boolean indicating whether slurry storage has a crust (TRUE) or not (FALSE). Default is TRUE.}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A new User_input object with validation results
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-validate"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-validate}{}}}
\subsection{Method \code{validate()}}{
Validate all input parameters for the manure management system
Checks that all fractions sum to 1 where appropriate and that all values are within valid ranges.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$validate()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
TRUE if all parameters are valid, FALSE otherwise
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-get_validation_message_string"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-get_validation_message_string}{}}}
\subsection{Method \code{get_validation_message_string()}}{
Get all validation error messages as a single formatted string
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$get_validation_message_string()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A string containing all validation error messages, or a success message if all parameters are valid
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-print"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-print}{}}}
\subsection{Method \code{print()}}{
Print a formatted summary of all input parameters and validation results
Shows all parameter values and indicates whether they are valid or not.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$print()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the User_input object for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-get_parameters"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-get_parameters}{}}}
\subsection{Method \code{get_parameters()}}{
Get all input parameters as a structured list for use in calculations
The list format matches the expected structure for manure management calculations.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$get_parameters()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
A nested list containing all input parameters organized by category
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-get_main_animal_type"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-get_main_animal_type}{}}}
\subsection{Method \code{get_main_animal_type()}}{
Determine the main animal type category from livestock_class_conversion.yaml
Maps specific animal types to main categories (e.g., 'dairy_cattle_tied' -> 'dairy_cattle')
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$get_main_animal_type()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
The main animal type category or the original animal type if not found
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-fill_default_values"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-fill_default_values}{}}}
\subsection{Method \code{fill_default_values()}}{
Fill in missing parameters with default values from configuration files
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$fill_default_values()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the User_input object for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-load_bedding_amount"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-load_bedding_amount}{}}}
\subsection{Method \code{load_bedding_amount()}}{
Load bedding amount from straw_litter.yaml
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$load_bedding_amount()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the User_input object for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-load_bedding_N"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-load_bedding_N}{}}}
\subsection{Method \code{load_bedding_N()}}{
Load bedding N content from straw_litter.yaml
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$load_bedding_N()}\if{html}{\out{</div>}}
}

\subsection{Returns}{
Invisibly returns the User_input object for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-load_defaults_for_animal"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-load_defaults_for_animal}{}}}
\subsection{Method \code{load_defaults_for_animal()}}{
Load default values for a specific animal from the data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$load_defaults_for_animal(animal_data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{animal_data}}{List of default values for the animal}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
Invisibly returns the User_input object for method chaining
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-User_input-clone"></a>}}
\if{latex}{\out{\hypertarget{method-User_input-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{User_input$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
